@{
    Page.Title = "Product Edit";
    Layout = "~/_Layout.cshtml";

    var pid = Request.QueryString["pid"];
    if (pid.IsEmpty())
    {
        Response.Redirect("ProductSearch.cshtml");
    }
    var productid = Request.Form["ProductID"];
    var productname = Request.Form["ProductName"];
    var supplierid = Request.Form["SupplierList"];
    var categoryid = Request.Form["CategoryList"];
    var quantityperunit = Request.Form["QuantityPerUnit"];
    var unitprice = Request.Form["UnitPrice"];
    var unitsinstock = Request.Form["UnitsInStock"];
    var unitsonorder = Request.Form["UnitsOnOrder"];
    var reorderlevel = Request.Form["ReorderLevel"];
    var discontinued = Request.Form["Discontinued"];
    //capture which button was pressed
    var thebutton = Request.Form["theButton"];

    if (IsPost)
    {
        //discontinued is a checkbox
        //the possible values from the check box is null (not checked) or "on" (checked)
        //the acceptable sql values for a bit are 0 and 1
        if (discontinued==null)
        {
            discontinued = "0";
        }
        else
        {
            discontinued = "1";
        }
    }
    else
    {
        productid = pid;
        discontinued = "0";
    }
    var db = Database.Open("NWDB");
    var supplierStatement = "SELECT SupplierID, CompanyName "
                       + "FROM Suppliers "
                       + "ORDER BY CompanyName";
    var querySuppliers = db.Query(supplierStatement);
    var categoryStatement = "SELECT CategoryID, CategoryName "
                       + "FROM Categories "
                       + "ORDER BY CategoryName";
    var queryCategories = db.Query(categoryStatement);
    var queryStatement = "SELECT ProductID, ProductName, SupplierID, CategoryID, QuantityPerUnit, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel, Discontinued "
                        + "FROM Products "
                        + "WHERE ProductID = @0";
    var queryProducts = db.QuerySingle(queryStatement,pid);
}



@section banner{
    <h1>Product Edit - Update and Delete</h1>
}
@if(IsPost)
{
    if (thebutton.Equals("cancel"))
    {
       <p>Your cancel code goes here</p>
    }
    else if (thebutton.Equals("delete"))
    {
        <p>Your delete code goes here</p>
    }
    else
    {

        <p>Your update code goes here</p>
    }
}
else //for IsPost
{
    //if this page is being shown for the "first time"
    //the page accesses the database for the current record
    //to display to the user
    queryProducts = db.QuerySingle(queryStatement, pid);

    //moving the current record data to the form controls
    //NEVER code to the data supplied
    //the Products table on the Northwind database does not
    //  have a record where the nullable fields are actual null
    //the following code takes into account fields which actually
    //  maybe null
    productid = queryProducts.ProductID.ToString();
    productname = queryProducts.ProductName;
    supplierid = queryProducts.SupplierID == null ? "0" : queryProducts.SupplierID.ToString();
    categoryid = queryProducts.CategoryID == null ? "0" : queryProducts.CategoryID.ToString();
    quantityperunit = queryProducts.QuantityPerUnit;
    unitprice = queryProducts.UnitPrice == null ? "" : queryProducts.UnitPrice.ToString();
    unitsinstock = queryProducts.UnitsInStock == null ? "" : queryProducts.UnitsInStock.ToString();
    unitsonorder = queryProducts.UnitsOnOrder == null ? "" : queryProducts.UnitsOnOrder.ToString();
    reorderlevel = queryProducts.ReorderLevel == null ? "" : queryProducts.ReorderLevel.ToString();
    discontinued = queryProducts.Discontinued.ToString();//from sql 0/1
}
    <div class="form-group">

        <form id="theForm" action="" method="post">
            <div class="col-sm-6">
                <label id="forProductID">Product ID</label><br />
                <label id="forProductName">Product Name</label><br />
                <label id="forSupplierList">Supplier</label><br />
                <label id="forCategoryList">Category</label><br />
                <label id="forQuantityPerUnit">Quantity Per Unit</label><br />
                <label id="forUnitPrice">Unit Price</label><br />
                <label id="forUnitsInStock">Units In Stock</label><br />
                <label id="forUnitsOnOrder">Units On Order</label><br />
                <label id="forReorderLevel">ReorderLevel</label><br />
                <label id="forDiscontinued">Discontinued</label><br />
            </div>
            <div class="col-sm-6">
                <input type="text" name="ProductID" value="@productid" readonly /><br/>
                <input type="text" name="ProductName" value="@productname"  /><br/>
                <select name="SupplierList">
                    <option value="0">select...</option>
                    @foreach (var acollectionrow in querySuppliers)
                    {
                        if (acollectionrow.SupplierID.ToString() == supplierid)
                        {
                            <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                        }
                        else
                        {
                            <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                        }
                    }
                </select><br />
                <select name="CategoryList">
                    <option value="0">select...</option>
                    @foreach (var acollectionrow in queryCategories)
                    {
                        if (acollectionrow.CategoryID.ToString() == categoryid)
                        {
                            <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                        }
                        else
                        {
                            <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                        }
                    }
                </select><br />
                <input type="text" name="QuantityPerUnit" value="@quantityperunit"  /><br />
                <input type="number" name="UnitPrice" value="@unitprice" min="0.00" step="0.01"  /><br />
                <input type="number" name="UnitsInStock" value="@unitsinstock" min="0" step="1" /><br />
                <input type="number" name="UnitsOnOrder" value="@unitsonorder" min="0" step="1" /><br />
                <input type="number" name="ReorderLevel" value="@reorderlevel" min="0" step="1" /><br />
                @if (discontinued.Equals("True") || (discontinued == "1"))
                {
                    <input type="checkbox" name="Discontinued" checked value="1" /><br/><br/>
                }
                else
                {
                    <input type="checkbox" name="Discontinued" value="0" /><br /><br />
                }
            </div>
            <div class="row">
                <button type="submit" name="theButton" id="theUpdate" class="btn btn-primary" value="update">Update</button>&nbsp;&nbsp;&nbsp;
                <button type="submit" name="theButton" id="theDelete" class="btn btn-primary" value="delete" >Delete</button>&nbsp;&nbsp;&nbsp;
                <button type="submit" name="theButton" id="theCancel" class="btn btn-primary" value="cancel" >Cancel</button>
             </div>
            
        </form>
    </div>
